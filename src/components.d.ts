/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import {
  MatchResults,
} from '@stencil/router';

import {
  AppHome as AppHome
} from './components/app-home/app-home';

declare global {
  interface HTMLAppHomeElement extends AppHome, HTMLElement {
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-home": JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppProfile as AppProfile
} from './components/app-profile/app-profile';

declare global {
  interface HTMLAppProfileElement extends AppProfile, HTMLElement {
  }
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-profile": JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  FxTabContent as FxTabContent
} from './components/fx-tab/fx-tab-content';

declare global {
  interface HTMLFxTabContentElement extends FxTabContent, HTMLElement {
  }
  var HTMLFxTabContentElement: {
    prototype: HTMLFxTabContentElement;
    new (): HTMLFxTabContentElement;
  };
  interface HTMLElementTagNameMap {
    "fx-tab-content": HTMLFxTabContentElement;
  }
  interface ElementTagNameMap {
    "fx-tab-content": HTMLFxTabContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "fx-tab-content": JSXElements.FxTabContentAttributes;
    }
  }
  namespace JSXElements {
    export interface FxTabContentAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  FxTabHeader as FxTabHeader
} from './components/fx-tab/fx-tab-header';

declare global {
  interface HTMLFxTabHeaderElement extends FxTabHeader, HTMLElement {
  }
  var HTMLFxTabHeaderElement: {
    prototype: HTMLFxTabHeaderElement;
    new (): HTMLFxTabHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "fx-tab-header": HTMLFxTabHeaderElement;
  }
  interface ElementTagNameMap {
    "fx-tab-header": HTMLFxTabHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "fx-tab-header": JSXElements.FxTabHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface FxTabHeaderAttributes extends HTMLAttributes {
      contentTarget?: string;
      dismissible?: boolean;
      selected?: boolean;
      status?: string;
    }
  }
}


import {
  FxTabSet as FxTabSet
} from './components/fx-tab/fx-tab-set';

declare global {
  interface HTMLFxTabSetElement extends FxTabSet, HTMLElement {
  }
  var HTMLFxTabSetElement: {
    prototype: HTMLFxTabSetElement;
    new (): HTMLFxTabSetElement;
  };
  interface HTMLElementTagNameMap {
    "fx-tab-set": HTMLFxTabSetElement;
  }
  interface ElementTagNameMap {
    "fx-tab-set": HTMLFxTabSetElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "fx-tab-set": JSXElements.FxTabSetAttributes;
    }
  }
  namespace JSXElements {
    export interface FxTabSetAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  FxTabs as FxTabs
} from './components/fx-tab/fx-tabs';

declare global {
  interface HTMLFxTabsElement extends FxTabs, HTMLElement {
  }
  var HTMLFxTabsElement: {
    prototype: HTMLFxTabsElement;
    new (): HTMLFxTabsElement;
  };
  interface HTMLElementTagNameMap {
    "fx-tabs": HTMLFxTabsElement;
  }
  interface ElementTagNameMap {
    "fx-tabs": HTMLFxTabsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "fx-tabs": JSXElements.FxTabsAttributes;
    }
  }
  namespace JSXElements {
    export interface FxTabsAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  MyApp as MyApp
} from './components/my-app/my-app';

declare global {
  interface HTMLMyAppElement extends MyApp, HTMLElement {
  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-app": JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {
      
    }
  }
}

